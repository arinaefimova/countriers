@use "sass:math";


// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

@mixin flexboxinline(){display: -webkit-box; display: -moz-box; display:-ms-flexbox; display: -webkit-flex; display: inline-flex; font-size: 0; }
@mixin anim ($time,$delay){-webkit-transition:all $time ease $delay; -moz-transition:all $time ease $delay; -ms-transition:all $time ease $delay; -o-transition:all $time ease $delay;}
@mixin flexorder($val){-webkit-box-ordinal-group: $val; -moz-box-ordinal-group: $val; -ms-flex-order:$val; -webkit-order:$val; order:$val;}
@mixin flexbox(){display: -webkit-box; display: -moz-box; display:-ms-flexbox; display: -webkit-flex; display: flex; font-size: 0; }
// Подключение миксинов ===========================================================================================================================================================================================================================================================================




// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин
// &subset=cyrillic -exit - добавление кириллицы
@import "fonts";
@import url(https://fonts.googleapis.com/css?family=Montserrat:regular,500,600,700&display=swap);

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================


// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "Montserrat";
$fontSize: rem(14); // где 14(px) - размер шрифта по умолчанию из макета
// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================





// Переменные ===============================================================================================================================================================================================================================================================================================
// Минимальная ширина страницы
$minWidth: 320;// Минимальная ширина страницы





// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1170;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Основные цвета
$mainColor: #000; // Цвет шрифта по умолчанию

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;


// Обнуление и общие параметры ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";
// Обнуление и общие параметры ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================



body {
	// Скролл заблокирован
	.lock & {
		overflow: hidden;
		touch-action: none;
	}
	// Сайт загружен
	.loaded & {
	}
}
// Оболочка ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	// Прижимаем footer
	> main {
		flex: 1 1 auto;
	}
	// Фикс для слайдеров
	> * {
		min-width: 0;
	}
}

//ОСНОВНАЯ ЧАСТЬ==================================================================================================================================================================================================================
.see-more{
    position: relative;
    padding-left: 60px;
    color: #FFF;
    opacity: 0.6;
    display: block;
    transform: rotate(-90deg) translate(0%, 100%);
    transform-origin: left bottom;
    &::before{
        content:'';
        position: absolute;
        left: 0;
        top: calc(50% - 1.5px);
        width: 38px;
        height: 3px;
        background-color: #fff;
        opacity: 0.3;
    }
}


.location {
    position: relative;
    flex-grow: 1;
    display: block;
    padding: 34px 28px 26px 95px;
    background: url('../img/map.svg');
    background-position: 35px 40px;
    background-size: auto;
    background-repeat: no-repeat;
   
    
    @media (max-width: em(1400)){
        padding: 20px 20px 18px 55px; 
        background-position: 15px 22px;
    }
    &::before{
        content:'';
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 5px;
        filter: blur(3px);
        transition: all 0.8s ease 0s;
       
        
    }
    @media (any-hover: hover){
        &:hover{
            &::before{
                opacity: 0.8;
                filter: blur(10px);
            }
        }
    }


    &__title {
        font-size: 20px;
        font-weight: 700;
        line-height: 1.2;
        color:#fff;
        margin-bottom: 4px;
        @media (max-width: em(1400)){
              font-size: 18px;

        }
    }

    &__link {
        font-size: 16px;
        font-weight: 400;
        line-height: 1.25;
        color:#fff;
        opacity: 0.4;

    }
}


// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/

@if ($responsiveType==1) {
	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			padding: 0 rem(math.div($containerPadding, 2));
		}
	}
} @else {
	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
		} @else {
			@if ($containerPadding>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: $pc) {
			max-width: rem(970);
		}
		@media (max-width: $tablet) {
			max-width: rem(750);
		}
		@media (max-width: $mobile) {
			max-width: none;
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}



@import "header";
@import "footer";
@import "nav";
@import "socials";
@import "controls";
@import "slide";
@import "libs/swiper.scss";

/*

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";

// Подключение стилей отдельных блоков


// Подключение стилей отдельных страниц
@import "home";


*/